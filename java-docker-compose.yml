---
version: '3.6'

x-besu-def:
  &besu-def
  restart: "on-failure"
  image: sample-network/besu:${BESU_VERSION}
  entrypoint: /opt/besu/node_start.sh
  command: [
    "--config-file=/config/config.toml",
    "--genesis-file=/config/genesis.json",
    "--node-private-key-file=/opt/besu/keys/key",
    "--rpc-http-api=WEB3,ETH,NET,EEA,ADMIN,${BESU_CONS_API}",
    "--rpc-ws-api=WEB3,ETH,NET,EEA,ADMIN,${BESU_CONS_API}"]


services:

  bootnode:
    << : *besu-def
    build:
      context: besu
      args:
        BESU_VERSION: ${BESU_VERSION}
    environment:
      - BESU_PUBLIC_KEY_DIRECTORY=${BESU_PUBLIC_KEY_DIRECTORY}
      - LOG4J_CONFIGURATION_FILE=/config/log-config.xml
    entrypoint: /opt/besu/bootnode_start.sh
    volumes:
      - public-keys:${BESU_PUBLIC_KEY_DIRECTORY}
      - ./config/besu/config.toml:/config/config.toml
      - ./config/besu/log-config.xml:/config/log-config.xml
      - ./logs/besu:/var/log/
      - ./config/besu/${BESU_CONS_ALGO}Genesis.json:/config/genesis.json
      - ./config/besu/networkFiles/bootnode/keys:/opt/besu/keys

  validator2:
    << : *besu-def
    environment:
      - BESU_PUBLIC_KEY_DIRECTORY=${BESU_PUBLIC_KEY_DIRECTORY}
      - LOG4J_CONFIGURATION_FILE=/config/log-config.xml
    volumes:
      - public-keys:${BESU_PUBLIC_KEY_DIRECTORY}
      - ./config/besu/config.toml:/config/config.toml
      - ./config/besu/log-config.xml:/config/log-config.xml
      - ./logs/besu:/var/log/
      - ./config/besu/${BESU_CONS_ALGO}Genesis.json:/config/genesis.json
      - ./config/besu/networkFiles/validator2/keys:/opt/besu/keys
    depends_on:
      - bootnode

  validator3:
    << : *besu-def
    environment:
      - BESU_PUBLIC_KEY_DIRECTORY=${BESU_PUBLIC_KEY_DIRECTORY}
      - LOG4J_CONFIGURATION_FILE=/config/log-config.xml
    volumes:
      - public-keys:${BESU_PUBLIC_KEY_DIRECTORY}
      - ./config/besu/config.toml:/config/config.toml
      - ./config/besu/log-config.xml:/config/log-config.xml
      - ./logs/besu:/var/log/
      - ./config/besu/${BESU_CONS_ALGO}Genesis.json:/config/genesis.json
      - ./config/besu/networkFiles/validator3/keys:/opt/besu/keys
    depends_on:
      - bootnode

  validator4:
    << : *besu-def
    environment:
      - BESU_PUBLIC_KEY_DIRECTORY=${BESU_PUBLIC_KEY_DIRECTORY}
      - LOG4J_CONFIGURATION_FILE=/config/log-config.xml
    volumes:
      - public-keys:${BESU_PUBLIC_KEY_DIRECTORY}
      - ./config/besu/config.toml:/config/config.toml
      - ./config/besu/log-config.xml:/config/log-config.xml
      - ./logs/besu:/var/log/
      - ./config/besu/${BESU_CONS_ALGO}Genesis.json:/config/genesis.json
      - ./config/besu/networkFiles/validator4/keys:/opt/besu/keys
    depends_on:
      - bootnode

  rpcnode:
    << : *besu-def
    environment:
      - BESU_PUBLIC_KEY_DIRECTORY=${BESU_PUBLIC_KEY_DIRECTORY}
      - LOG4J_CONFIGURATION_FILE=/config/log-config.xml
    volumes:
      - public-keys:${BESU_PUBLIC_KEY_DIRECTORY}
      - ./config/besu/config.toml:/config/config.toml
      - ./config/besu/log-config.xml:/config/log-config.xml
      - ./logs/besu:/var/log/
      - ./config/besu/${BESU_CONS_ALGO}Genesis.json:/config/genesis.json
      - ./config/besu/networkFiles/rpcnode/keys:/opt/besu/keys
    depends_on:
      - bootnode
    ports:
      - 8545:8545/tcp

  ethsignerProxy:
    image: pegasyseng/ethsigner:latest
    command: [
      "--chain-id=2018",
      "--http-listen-host=0.0.0.0",
      "--downstream-http-port=8545",
      "--downstream-http-host=rpcnode",
      "file-based-signer",
      "-k",
      "/opt/ethsigner/keyfile",
      "-p",
      "/opt/ethsigner/passwordfile"
    ]
    volumes:
      - ./config/ethsigner/password:/opt/ethsigner/passwordfile
      - ./config/ethsigner/key:/opt/ethsigner/keyfile
    depends_on:
      - bootnode
      - rpcnode
    ports:
      - 18545:8545/tcp

  explorer:
    build: block-explorer-light
    image: sample-network/block-explorer-light:${BESU_VERSION}
    depends_on:
      - rpcnode
    ports:
      - 25000:80/tcp

  prometheus:
    image: "prom/prometheus"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090/tcp

  grafana:
    image: "grafana/grafana"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana:/var/lib/grafana
    ports:
      - 3000:3000/tcp



volumes:
  public-keys:

  prometheus:

  grafana:
